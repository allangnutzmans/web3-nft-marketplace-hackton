// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model PingDummy {
    id String @id @default(cuid())
}

model NFTItem {
    id          String     @id @default(cuid())
    metadataCid String     @unique // IPFS CID
    price       Decimal    // Preço em ETH
    isActive    Boolean    @default(true)
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt
    purchases   Purchase[]
}

model Purchase {
    id            String        @id @default(cuid())
    nftItemId     String
    buyerAddress  String
    amount        Decimal       // Valor pago em ETH
    txHash        String?       // Hash da transação de compra
    status        PurchaseStatus @default(PENDING)
    tokenId       Int?          // ID do token quando mintado
    mintTxHash    String?       // Hash da transação de mint
    refundTxHash  String?       // Hash da transação de refund
    createdAt     DateTime      @default(now())
    updatedAt     DateTime      @updatedAt
    
    nftItem       NFTItem       @relation(fields: [nftItemId], references: [id])
    
    @@index([buyerAddress])
    @@index([status])
}

enum PurchaseStatus {
    PENDING
    APPROVED
    REJECTED
}
